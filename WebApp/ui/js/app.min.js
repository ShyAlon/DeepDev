"use strict";var deepDev=angular.module("deepDev",["DeepDev.filters","DeepDev.directives","DeepDev.controllers","DeepDev.services","ngGrid","ngSanitize","ngRoute","ngAnimate","mgcrea.ngStrap","angular-intro","pascalprecht.translate","angular-loading-bar","angular-advanced-searchbox","flow","textAngular",]),filters=angular.module("DeepDev.filters",[]),directives=angular.module("DeepDev.directives",[]),controllers=angular.module("DeepDev.controllers",[]),services=angular.module("DeepDev.services",[]);deepDev.config(["$routeProvider","$locationProvider","$httpProvider","$translateProvider","$tooltipProvider","flowFactoryProvider",function(n,t,i,r,u,f){r.translations("en",englishTranslation);r.preferredLanguage("en");angular.extend(u.defaults,{html:!0,delay:{show:1e3,hide:100}});f.defaults={target:"/Server/api/FileUpload",permanentErrors:[404,500,501],maxChunkRetries:1,chunkRetryInterval:1e3,simultaneousUploads:4,query:{requestVerificationToken:"xsrf",blueElephant:"42"}};f.on("catchAll",function(){console.log("catchAll",arguments)});n.when("/",{templateUrl:"partials/home.html",controller:"homeCtrl"});n.when("/home",{templateUrl:"partials/home.html",controller:"homeCtrl"});n.when("/process",{templateUrl:"partials/process.html",controller:"homeCtrl"});n.when("/fs2",{templateUrl:"partials/fs2/fs2.html",controller:"FS2Controller"});n.when("/contact",{templateUrl:"partials/contact.html"});n.when("/about",{templateUrl:"partials/about.html"});n.when("/faq",{templateUrl:"partials/faq.html"});n.when("/playground/:widgetName",{templateUrl:"playground/playground.html",controller:"PlaygroundCtrl"});n.when("/login",{templateUrl:"partials/user/login.html",controller:"AccountCtrl"});n.when("/logout",{templateUrl:"partials/user/logout.html",controller:"AccountCtrl"});n.when("/signup",{templateUrl:"partials/user/signup.html",controller:"AccountCtrl"});n.when("/reset-password",{templateUrl:"partials/user/reset-password.html",controller:"AccountCtrl"});n.when("/set-new-password",{templateUrl:"partials/user/set-new-password.html",controller:"AccountCtrl"});n.when("/edit-user",{templateUrl:"partials/user/edit.html",controller:"AccountCtrl"});n.when("/Edit/:entity/:parentId/:entityId",{templateUrl:"partials/editEntity.html",controller:"entityCtrl"});n.when("/Search",{templateUrl:"partials/search.html",controller:"searchCtrl"});n.when("/Document/:projectId/:documentId",{templateUrl:"partials/document/createDocument.html",controller:"DocumentCtrl"});n.otherwise({redirectTo:"/home"})}]).factory("authInterceptor",["$rootScope","$q","$window",function(n,t){return{request:function(t){return t.headers=t.headers||{},t.headers.Authorization=n.tokenText,t},response:function(n){return n.status===401,n||t.when(n)}}}]).config(["$httpProvider",function(n){n.interceptors.push("authInterceptor");delete n.defaults.headers.common["X-Requested-With"]}]);deepDev.run(["$rootScope","$location","$http","$timeout","AuthService",function(n,t,i,r,u){n.authService=u;n.loginInput="user@gmail.com";n.passwordInput="complexpassword";n.$watch("authService.authorized()",function(){n.authService.initialState()||(n.authNotifier=new NotificationManager(n),n.authService.authorized()&&(t.path("/"),n.authNotifier.notify("information","Welcome "+n.authService.currentUser()+"!")),n.authService.authorized()||(t.path("/"),n.authNotifier.notify("information","Thanks for visiting.  You have been signed out.")))},!0);n.faq=[{key:"What is Angular-Enterprise-Seed?",value:"A starting point for server-agnostic, REST based or static/mashup UI."},{key:"What are the pre-requisites for running the seed?",value:"Just an HTTP server.  Add your own backend."},{key:"How do I change styling (css)?",value:"Change Bootstrap LESS and rebuild with the build.sh script.  This will update the appropriate css/image/font files."}]}]);
/*
//# sourceMappingURL=app.min.js.map
*/